--a_graycounter CARRY_CHAIN="MANUAL" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" WIDTH=3 aclr clk_en clock q sclr carry_chain_length=48 ignore_carry_buffers="OFF"
--VERSION_BEGIN 23.1 cbx_a_gray2bin 2024:05:14:17:57:37:SC cbx_a_graycounter 2024:05:14:17:57:37:SC cbx_cycloneii 2024:05:14:17:57:38:SC cbx_mgl 2024:05:14:17:57:46:SC cbx_stratix 2024:05:14:17:57:38:SC cbx_stratixii 2024:05:14:17:57:38:SC  VERSION_END


-- Copyright (C) 2024  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.


FUNCTION carry_sum (cin, sin)
RETURNS ( cout, sout);

--synthesis_resources = lut 4 reg 4 
SUBDESIGN a_graycounter_9vg
( 
	aclr	:	input;
	clk_en	:	input;
	clock	:	input;
	q[2..0]	:	output;
	sclr	:	input;
) 
VARIABLE 
	cs3 : carry_sum;
	cs4a[2..0] : carry_sum;
	dffe1 : dffe;
	dffe2a[2..0] : dffe;
	cnt_en	: NODE;
	updown	: NODE;

BEGIN 
	cs3.cin = (cnt_en & (dffe1.q $ (! updown)));
	cs3.sin = ((! sclr) & (dffe1.q $ cnt_en));
	cs4a[].cin = ( B"0", (cs4a[0].cout & (! dffe2a[0].q)), (cnt_en & cs3.cout));
	cs4a[].sin = ( ((! sclr) & (dffe2a[2].q $ cs4a[1].cout)), ((! sclr) & (dffe2a[1].q $ (dffe2a[0].q & cs4a[0].cout))), ((! sclr) & ((cnt_en & (dffe2a[0].q $ (! cs3.cout))) # ((! cnt_en) & dffe2a[0].q))));
	dffe1.clk = clock;
	dffe1.clrn = (! aclr);
	dffe1.d = cs3.sout;
	dffe1.ena = clk_en;
	dffe2a[].clk = clock;
	dffe2a[].clrn = ( (! aclr), (! aclr), (! aclr));
	dffe2a[].d = cs4a[].sout;
	dffe2a[].ena = clk_en;
	cnt_en = VCC;
	q[] = dffe2a[].q;
	updown = VCC;
END;
--VALID FILE
